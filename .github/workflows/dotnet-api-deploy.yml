name: Build & Deploy API

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      image_name:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      container_port:
        required: false
        type: number
        default: 8080
      host_port:
        required: false
        type: number
      database_name:
        required: false
        type: string
      new_relic_app_name:
        required: false
        type: string
    secrets:
      SSH_HOST:
        required: true
      SSH_PORT:
        required: true
      SSH_USERNAME:
        required: true
      SSH_KEY:
        required: true
      POSTGRES_HOST:
        required: false
      POSTGRES_PORT:
        required: false
      POSTGRES_USER:
        required: false
      POSTGRES_PASS:
        required: false
      REDIS_PASS:
        required: true
      NEW_RELIC_LICENSE_KEY:
        required: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build . \
            --file ${{ inputs.dockerfile }} \
            --tag ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ inputs.environment }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ inputs.environment }}

  deploy:
    needs: build
    name: Deploy to Server
    runs-on: ubuntu-latest

    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker network create myNetwork --subnet=172.20.0.0/24 --gateway=172.20.0.1 || true

            docker pull ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ inputs.environment }}

            if [ "$(docker ps -aq -f name=^/${{ inputs.image_name }}$)" ]; then
              echo "Removing existing container ${{ inputs.image_name }}"
              docker rm -f ${{ inputs.image_name }}
            else
              echo "No container named ${{ inputs.image_name }} found"
            fi

            PORT_MAPPING=""
            if [ -n "${{ inputs.host_port }}" ]; then
              PORT_MAPPING="-p ${{ inputs.host_port }}:${{ inputs.container_port }}"
            fi

            DB_CONNECTION_STRING=""
            if [ -n "${{ secrets.POSTGRES_HOST }}" ] && [ -n "${{ secrets.POSTGRES_PORT }}" ] && [ -n "${{ secrets.POSTGRES_USER }}" ] && [ -n "${{ secrets.POSTGRES_PASS }}" ] && [ -n "${{ inputs.database_name }}" ]; then
              DB_CONNECTION_STRING="-e ConnectionStrings__DefaultConnection=\"Server=${{ secrets.POSTGRES_HOST }};Port=${{ secrets.POSTGRES_PORT }};Database=${{ inputs.database_name }};Username=${{ secrets.POSTGRES_USER }};Password=${{ secrets.POSTGRES_PASS }};\""
            fi

            docker run \
              --name ${{ inputs.image_name }} -d \
              --network myNetwork \
              $PORT_MAPPING \
              --restart always \
              -e DOTNET_ENVIRONMENT="${{ inputs.environment }}" \
              -e NEW_RELIC_LICENSE_KEY="${{ secrets.NEW_RELIC_LICENSE_KEY }}" \
              -e NEW_RELIC_APP_NAME="${{ inputs.new_relic_app_name || format('{0} - {1}', inputs.image_name, inputs.environment) }}" \
              -e REDIS_PASS="${{ secrets.REDIS_PASS }}" \
              $DB_CONNECTION_STRING \
              ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ inputs.environment }}